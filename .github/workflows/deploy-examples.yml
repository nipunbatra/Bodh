name: Deploy Examples to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Set up Quarto
      uses: quarto-dev/quarto-actions/setup@v2
      with:
        version: 'pre-release'

    - name: Install dependencies
      run: |
        echo "🔧 Installing Python dependencies..."
        python -m pip install --upgrade pip
        echo "📦 Installing requirements..."
        pip install -r requirements.txt
        echo "🎭 Installing Playwright dependencies..."
        playwright install-deps chromium
        echo "🌐 Installing Chromium browser..."
        playwright install chromium
        echo "✅ All dependencies installed successfully!"

    - name: Pre-generation check
      run: |
        echo "🔍 Checking repository structure before generation..."
        echo "Current directory: $(pwd)"
        echo "Repository contents:"
        ls -la
        echo "Examples directory:"
        ls -la examples/ || echo "❌ No examples directory"
        echo "Showcase file:"
        ls -la examples/showcase.md || echo "❌ No showcase.md file"
        echo "Themes directory:"
        ls -la themes/ || echo "❌ No themes directory"
        echo "Config file:"
        ls -la config.py || echo "❌ No config.py file"
        echo "Main script:"
        ls -la bodh.py || echo "❌ No bodh.py file"

    - name: Generate examples
      run: |
        echo "🚀 Starting example generation..."
        python generate_examples.py
        echo "✅ Example generation script completed!"

    - name: Post-generation detailed check
      run: |
        echo "📊 Checking results after generation..."
        echo "Docs directory structure:"
        find docs/ -type f -exec ls -la {} \; 2>/dev/null || echo "❌ No docs directory or files"
        echo ""
        echo "📄 Index.html content preview:"
        head -20 docs/index.html 2>/dev/null || echo "❌ No index.html found"
        echo ""
        echo "🖼️ Examples directory:"
        ls -la docs/examples/ 2>/dev/null || echo "❌ No examples directory"
        echo ""
        echo "📑 PDFs directory:"
        ls -la docs/pdfs/ 2>/dev/null || echo "❌ No pdfs directory"
        echo ""
        echo "📏 File sizes:"
        du -h docs/* 2>/dev/null || echo "❌ No docs files to measure"
        echo ""
        echo "🧮 Total files generated:"
        find docs/ -type f | wc -l 2>/dev/null || echo "0"

    - name: Build Quarto site
      run: |
        echo "📚 Building Quarto documentation site..."
        echo "💾 Backing up generated examples..."
        cp -r docs/examples/ examples_backup/ || echo "⚠️ No examples to backup"
        cp -r docs/pdfs/ pdfs_backup/ || echo "⚠️ No PDFs to backup"
        
        echo "🏗️ Building Quarto site..."
        quarto render
        
        echo "📂 Restoring generated examples..."
        mkdir -p docs/examples docs/pdfs
        cp -r examples_backup/* docs/examples/ 2>/dev/null || echo "⚠️ No examples to restore"
        cp -r pdfs_backup/* docs/pdfs/ 2>/dev/null || echo "⚠️ No PDFs to restore"
        
        echo "✅ Quarto site built with examples restored!"
        echo "📊 Final verification:"
        ls -la docs/examples/ || echo "❌ No examples directory"
        ls -la docs/pdfs/ || echo "❌ No pdfs directory"

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Show Deployed URL
      run: echo "Visit your site at ${{ steps.deployment.outputs.page_url }}"
